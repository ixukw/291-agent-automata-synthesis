int maxState = 4; 
int t = 8;
int move_left(int state, int move){
	int nextState;
	if (state == 0) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 1) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 2) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 3) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else {
		assert 0;
	}
	assert nextState < maxState;
 	return nextState;
} 

int move_right(int state, int move){
	int nextState;
	if (state == 0) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 1) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 2) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 3) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else {
		assert 0;
	}
	assert nextState < maxState;
 	return nextState;
} 

int move_up(int state, int move){
	int nextState;
	if (state == 0) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 1) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 2) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 3) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else {
		assert 0;
	}
	assert nextState < maxState;
 	return nextState;
} 

int move_down(int state, int move){
	int nextState;
	if (state == 0) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 1) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 2) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else if (state == 3) {
		if (move == 0) {
			nextState = ??; 
		} else if (move == 1) {
			nextState = ??; 
		} else if (move == 2) {
			nextState = ??; 
		} else if (move == 3) {
			nextState = ??; 
		} else { 
			assert 0;
		}
	} else {
		assert 0;
	}
	assert nextState < maxState;
 	return nextState;
} 


harness void main() {
	int[t] true_actions = {0,1,2,3,0,3,2,3};
	int init_state = 0;
	int init_action = 1;
	int l = move_left(0, init_action);
	int r = move_right(1, init_action);
	int u = move_up(2, init_action);
	int d = move_down(3, init_action);
	assert (l == 0 && r != 0 && u != 0 && d != 0) || (r == 0 && l != 0 && u != 0 && d != 0) || (u == 0 && l != 0 && r != 0 && d != 0) || (d == 0 && l != 0 && r != 0 && u != 0);
	int next;
	if (l == 0) {
		next = 0;
	} else if (r == 0) {
		next = 1;
	} else if (u == 0) {
		next = 2;
	} else if (d == 0) {
		next = 3;
	}
	assert (next == init_action);
	
	for (int i=0; i<t; i++) {
		l = move_left(l, next);
		r = move_right(r, next);
		u = move_up(u, next);
		d = move_down(d, next);
		assert (l == 0 && r != 0 && u != 0 && d != 0) || (r == 0 && l != 0 && u != 0 && d != 0) || (u == 0 && l != 0 && r != 0 && d != 0) || (d == 0 && l != 0 && r != 0 && u != 0);
		if (l == 0) {
			next = 0;
		} else if (r == 0) {
			next = 1;
		} else if (u == 0) {
			next = 2;
		} else if (d == 0) {
			next = 3;
		}
		assert (next == true_actions[i]);
	}
}
